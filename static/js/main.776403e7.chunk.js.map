{"version":3,"sources":["types/TodoStatus.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","utils/functions.ts","index.tsx"],"names":["TodoStatus","determineTextClass","completed","classNames","TodoItem","isSelected","todo","setSelectedTodoId","selectedTodo","id","title","className","type","onClick","TodoList","filteredTodos","map","TodoFilter","filter","setFilter","query","setQuery","defaultValue","All","value","onChange","event","target","Object","entries","key","placeholder","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","isLoading","setIsLoading","error","setError","useEffect","userId","catch","err","console","finally","href","email","name","App","todosList","setTodosList","selectedTodoId","todoList","toLowerCase","includes","Active","Completed","filterTodoList","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.776403e7.chunk.js","sourcesContent":["export enum TodoStatus {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  setSelectedTodoId: (arg: number) => void;\n  selectedTodo: Todo | undefined;\n};\n\nconst determineTextClass = (completed: boolean) => classNames({\n  'has-text-danger': !completed,\n  'has-text-success': completed,\n});\n\nconst determineIconClass = (isSelected: boolean) => classNames({\n  'far fa-eye-slash': isSelected,\n  'far fa-eye': !isSelected,\n});\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  setSelectedTodoId,\n  selectedTodo,\n}) => {\n  const { id, completed, title } = todo;\n\n  return (\n    <tr data-cy=\"todo\">\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p className={determineTextClass(completed)}>{title}</p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => setSelectedTodoId(id)}\n        >\n          <span className=\"icon\">\n            <i className={determineIconClass(selectedTodo?.id === id)} />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ntype Props = {\n  filteredTodos: Todo[],\n  selectedTodo: Todo | undefined,\n  setSelectedTodoId: (arg: number) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  filteredTodos,\n  setSelectedTodoId,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {filteredTodos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          setSelectedTodoId={setSelectedTodoId}\n          selectedTodo={selectedTodo}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { TodoStatus } from '../../types/TodoStatus';\n\ntype Props = {\n  filter: string;\n  setFilter: (value: TodoStatus) => void;\n  query: string;\n  setQuery: React.Dispatch<React.SetStateAction<string>>;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filter,\n  setFilter,\n  query,\n  setQuery,\n}) => {\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilter(event.target.value as TodoStatus);\n  };\n\n  const clearSearch = () => {\n    setQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            defaultValue={TodoStatus.All}\n            value={filter}\n            onChange={handleFilterChange}\n          >\n            {Object.entries(TodoStatus).map(([key, value]) => (\n              <option value={value} key={key}>\n                {key}\n              </option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-search\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\">\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              aria-label=\"Clear Search Button\"\n              className=\"delete\"\n              onClick={clearSearch}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectedTodo: Todo | null;\n  setSelectedTodoId: (id: number) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodoId,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!selectedTodo) {\n      setUser(null);\n\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n\n    getUser(selectedTodo.userId)\n      .then(setUser)\n      .catch((err) => {\n        setError('An error occurred while fetching user data.');\n        // eslint-disable-next-line no-console\n        console.error('User data fetch error:', err);\n      })\n      .finally(() => setIsLoading(false));\n  }, [selectedTodo]);\n\n  return (\n    <div className={`modal ${isLoading ? 'is-active' : ''}`} data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading && <Loader />}\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <div\n            className=\"modal-card-title has-text-weight-medium\"\n            data-cy=\"modal-header\"\n          >\n            {selectedTodo && `Todo #${selectedTodo.id}`}\n          </div>\n\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            type=\"button\"\n            className=\"delete\"\n            data-cy=\"modal-close\"\n            onClick={() => setSelectedTodoId(0)}\n          />\n        </header>\n\n        <div className=\"modal-card-body\">\n          {error ? (\n            <p className=\"has-text-danger\" data-cy=\"modal-error\">\n              {error}\n            </p>\n          ) : (\n            <>\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo && selectedTodo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {selectedTodo && (\n                  <>\n                    <strong\n                      className={`has-text-${selectedTodo.completed ? 'success' : 'danger'}`}\n                    >\n                      {selectedTodo.completed ? 'Done' : 'Planned'}\n                    </strong>\n                    {' by '}\n                    <a href={`mailto:${user?.email}`}>\n                      {user?.name}\n                    </a>\n                  </>\n                )}\n              </p>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoStatus } from './types/TodoStatus';\nimport { filterTodoList } from './utils/functions';\n\nexport const App: React.FC = () => {\n  const [todosList, setTodosList] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [filter, setFilter] = useState(TodoStatus.All);\n  const [query, setQuery] = useState('');\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [error, setError] = useState('');\n\n  const filteredTodos = filterTodoList(todosList, query, filter);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos()\n      .then(setTodosList)\n      .catch((err) => {\n        // eslint-disable-next-line no-console\n        console.error('An error occurred:', err);\n        setError('An error occurred while fetching data.');\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const selectedTodo = todosList.find((todo) => todo.id === selectedTodoId);\n\n  return (\n    <>\n      {error && <div className=\"message-header\">{error}</div>}\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filter={filter}\n                setFilter={setFilter}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              <TodoList\n                filteredTodos={filteredTodos}\n                setSelectedTodoId={setSelectedTodoId}\n                selectedTodo={selectedTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodoId={setSelectedTodoId}\n        />\n      )}\n    </>\n  );\n};\n","import { TodoStatus } from '../types/TodoStatus';\nimport { Todo } from '../types/Todo';\n\nexport function filterTodoList(\n  todoList: Todo[],\n  query: string,\n  filter: string,\n) {\n  return todoList\n    .filter(todo => todo.title.toLowerCase()\n      .includes(query.toLowerCase()))\n    .filter(todo => {\n      switch (filter) {\n        case TodoStatus.Active:\n          return !todo.completed;\n\n        case TodoStatus.Completed:\n          return todo.completed;\n\n        default:\n          return todo;\n      }\n    });\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}